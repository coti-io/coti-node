<?xml version="1.0" encoding="UTF-8"?>
<users>
    <user type="wallet">
    	<userID>userHash</userID>
    	<addressMapping>address -> userHash</addressMapping>
        <initialTrustScore>
            <initialTrustScoreComponent name="KYC">
                <definition>"Calculated from the KYC identification data (very thin data)"</definition>
                <range>
                    <from>0</from>
                    <to>5</to>
                </range>
                <weight>1.0</weight>
                <decay>ln(2)/1095</decay>
            </initialTrustScoreComponent>
            <initialTrustScoreComponent name="Questionnaire1">
                <definition>"Main questionnaire, not mandatory, but important for arbitrators (no way to have high
                    enough TS from the beginning without it)"
                </definition>
                <range>
                    <from>0</from>
                    <to>25</to>
                </range>
                <weight>1.0</weight>
                <decay>ln(2)/1095</decay>
            </initialTrustScoreComponent>
        </initialTrustScore>
        <behaviorCumulativeScores>
            <transactionScore name="TransactionFrequency">
            	<idea>"More transactions - more TS"</idea>
            	<algorithm>"Day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 15, 80% of max contribution corresponds to 10,000 Txs per month or
                    N0.8 = 10,000 or rxN0.8 = 400 for day-by day"</valueAdjusting>
				<Ndelta>count(outcomingTxForAllAddressesForTheUser) within a day</Ndelta>
                <nonlinearFunction>tanh(N/400*1.098612289)</nonlinearFunction>
                <weight>0.75</weight>
                <decay>ln(2)/30</decay>
                <currentValue>tail + tanh(Ndelta/400*1.098612289)</currentValue>
                <tail>"Total contribution of previous days"</tail>
    	        <dayShift>
        	            <tail>(tail + tanh(Ndelta/400*1.098612289)) * exp(-decay)</tail>
                </dayShift>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
            <transactionScore name="Turnover">
            	<idea>"More turnover - more TS"</idea>
            	<algorithm>"Day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 15, 80% of max contribution corresponds to 100,000 COTI per month or
                    T0.8 = 100,000 or rxT0.8 = 4,000 for day-by day calculation"</valueAdjusting>
				<Tdelta>sum(outcomingTxForAllAddressesForTheUser) within a day</Tdelta>
                <nonlinearFunction>tanh(T/4000*1.098612289)</nonlinearFunction>
                <weight>0.75</weight>
                <decay>ln(2)/30</decay>
                <currentValue>tail + tanh(Tdelta/4000*1.098612289)</currentValue>
                <tail>"Total contribution of previous days"</tail>
                <dayShift>
	                <tail>(tail + tanh(Tdelta/4000*1.098612289)) * exp(-decay)</tail>
                </dayShift>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
            <transactionScore name="AverageBalance">
            	<idea>"Higher balance - higher TS"</idea>
            	<algorithm>"30 day deep day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 15, 80% of max contribution corresponds to 10,000 COTI avg balance in
                    month or B0.8 = 10,000 or rxB0.8 = 400 for day-by day calculation"</valueAdjusting>
                <tail>"Total contribution of previous days older than a month"</tail>
                <deltaVector>TSbal[0:29] 30 values</deltaVector>
                <newaddress>Calculate deltaVector[0:29] for the new address starting from the current balance backward</newaddress>
                <newaddress>New address is unknown before address which is first time debited</newaddress>
                <newaddress>There can be several deltaVector within a day</newaddress>
                <nonlinearFunction>tanh(B/400*1.098612289)</nonlinearFunction>
                <decay>ln(2)/30</decay>
                <currentValue>tail + sum( exp(-decay*t) * tanh(deltaVector[t]/400*1.098612289) for t in 0:29 )</currentValue>
                <dayShift>
                	<tail>tail * exp(-decay) + tanh(deltaVector[29]/400*1.098612289)  * exp(-decay*30)</tail>
                	<deltaVector>deltaVector[i+1] = deltaVector[i]</deltaVector>
                	<deltaVector>deltaVector[0] = deltaVector[0] --- but it may be better to take actual sum of all accounts balances</deltaVector>
                </dayShift>
                <weight>0.75</weight>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
        </behaviorCumulativeScores>
        <behaviorEventsScore>
            <standardEventScore name="IncorrectTransaction">
                <idea>"It is to be defined, how to catch it"</idea>
                <algorithm>"Go through all events, apply weight and decay and summarize"</algorithm>
                <algorithm>"After a limitation term, move events from actual table to archive"</algorithm>
                <term>360</term>
                <weight>-2.0</weight>
                <decay>ln(2)/90</decay>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </standardEventScore>
            <standardEventScore name="DoubleSpending">
                <idea>"It is to be defined, how to catch it"</idea>
                <algorithm>"Go through all events, apply weight and decay and summarize"</algorithm>
                <algorithm>"After a limitation term, move events from actual table to archive"</algorithm>
                <term>360</term>
                <weight>-10.0</weight>
                <decay>ln(2)/90</decay>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </standardEventScore>
            <compensableEventScore name="DepositedBalance">
                <idea>"Deposited money should increase TS for the depositor"</idea>
                <valueAdjusting>"Maximum contribution is 15 80% of max contribution corresponds to 1,000 deposited COTI"</valueAdjusting>
                <algorithm>"Go through all "DepositedBalance" and "ClosedDeposits" events and summarize. D=sum(amounts)"</algorithm>
                <comment>"The algorithm will be changed to take into account how long deposits are kept and decay for old ones"</comment>
                <amount>The value of depositing transaction</amount>
                <nonlinearFunction>tanh(D*1.098612289/1000)</nonlinearFunction>
                <weight>15.0</weight>
                <decay>ln(2)/90</decay>
                <calculation>TSdeposits = tanh(D*1.098612289/1000)</calculation>
            </compensableEventScore>
            <compensatingEventScore name="ClosedDeposits">
                <idea>"It is event of returning a deposit in all or in part, all description is in the parent event DepositedBalance"</idea>
                <amount>Value of the repaying transaction</amount>
                <parent>link to a DepositedBalance event</parent>
            </compensatingEventScore>
            <compensableEventScore name="NonFulfillment">
                <idea>"Not fulfilling a jury decision to pay or settle in other way"</idea>
                <algorithm>"Go through all "NonFulfillment" and "LateFulfillment" events, apply weights and summarize related"</algorithm>
                <term>720</term>
                <amount>The value of the debt</amount>
                <weight1>-50.0</weight1>
                <weight2>-10.0</weight2>
                <decay>ln(2)/90</decay>
                <calculation>TSnfevent = weight1 + weight2*amount/10^6</calculation>
                <calculation>TSnf = TSnfevent + TSnfcompensation</calculation>
            </compensableEventScore>
            <compensatingEventScore name="LateFulfillment">
                <idea>"Fulfilling a jury decision after compensated TS in part"</idea>
                <calculation>TSnfcompensation = weight1 + weight2*sum(amount for the same parent)/10^6</calculation>
                <amount>The value of the repayment</amount>
                <weight1>49.0</weight1>
                <weight2>10.0</weight2>
                <parent>link to a DepositedBalance event</parent>
            </compensatingEventScore>
        </behaviorEventsScore>
        <behaviorHighFrequencyEventsScore>
        	<comment>"It is not always real high frequency, but the processing for these events is frequency-based"</comment>
            <highFrequencyEventsScore name="FillingTheQuestionnaire">
                <idea>"A person filling questionnaire too frequent is probably cheating"</idea>
                <term>No term, just high decay</term>
                <valueToStore>TSquestfreq</valueToStore>
                <algorithm>"Apply penalty if there are 3 events per current day, double if 6, triple if 9"</algorithm>
                <weight>-10.0</weight>
                <decay>ln(2)/3</decay>
                <dayShift>Standard day-by-day decay</dayShift>
            </highFrequencyEventsScore>
            <highFrequencyEventsScore name="Claim">
                <idea>"A person sending too much claims to the arbitration should be deprived"</idea>
                <term>No term, just decay</term>
                <valueToStore>TSclaims</valueToStore>
                <nonlinearFunction>tanh(C/30*1.098612289)</nonlinearFunction>
                <algorithm>"Count the number of claims for the last month, after apply nonlinear function, after add the stored value"</algorithm>
                <weight>-0.25</weight>
                <decay>ln(2)/30</decay>
                <dayShift>Standard day-by-day decay</dayShift>
            </highFrequencyEventsScore>
        </behaviorHighFrequencyEventsScore>
    </user><user type="merchant">
    	<userID>userHash</userID>
    	<addressMapping>address -> userHash</addressMapping>
        <initialTrustScore>
            <initialTrustScoreComponent name="KYC">
                <definition>"Calculated from the KYC identification data (very thin data)"</definition>
                <range>
                    <from>0</from>
                    <to>5</to>
                </range>
                <weight>1.0</weight>
                <decay>ln(2)/365</decay>
            </initialTrustScoreComponent>
            <initialTrustScoreComponent name="Questionnaire1">
                <definition>"Main questionnaire, not mandatory, but important for arbitrators (no way to have high
                    enough TS from the beginning without it)"
                </definition>
                <range>
                    <from>0</from>
                    <to>25</to>
                </range>
                <weight>0.6</weight>
                <decay>ln(2)/365</decay>
            </initialTrustScoreComponent>
            <initialTrustScoreComponent name="Questionnaire2">
                <definition>"Questionnaire for merchants, not mandatory but important to have a good TS and low RR from the beginning. It consists of business-related questions."</definition>
                <range>
                    <from>0</from>
                    <to>20</to>
                </range>
                <weight>1.0</weight>
                <decay>ln(2)/365</decay>
            </initialTrustScoreComponent>
        </initialTrustScore>
        <behaviorCumulativeScores>
            <transactionScore name="TransactionFrequency">
            	<idea>"More transactions - more TS"</idea>
            	<algorithm>"Day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 15, 80% of max contribution corresponds to 10,000 Txs per month or
                    N0.8 = 10,000 or rxN0.8 = 400 for day-by day"</valueAdjusting>
				<Ndelta>count(outcomingTxForAllAddressesForTheUser) within a day</Ndelta>
                <nonlinearFunction>tanh(N/400*1.098612289)</nonlinearFunction>
                <weight>0.75</weight>
                <decay>ln(2)/30</decay>
                <currentValue>tail + tanh(Ndelta/400*1.098612289)</currentValue>
                <tail>"Total contribution of previous days"</tail>
    	        <dayShift>
        	            <tail>(tail + tanh(Ndelta/400*1.098612289)) * exp(-decay)</tail>
                </dayShift>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
            <transactionScore name="Turnover">
            	<idea>"More turnover - more TS"</idea>
            	<algorithm>"Day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 15, 80% of max contribution corresponds to 100,000 COTI per month or
                    T0.8 = 100,000 or rxT0.8 = 4,000 for day-by day calculation"</valueAdjusting>
				<Tdelta>sum(outcomingTxForAllAddressesForTheUser) within a day</Tdelta>
                <nonlinearFunction>tanh(T/4000*1.098612289)</nonlinearFunction>
                <weight>0.75</weight>
                <decay>ln(2)/30</decay>
                <currentValue>tail + tanh(Tdelta/4000*1.098612289)</currentValue>
                <tail>"Total contribution of previous days"</tail>
                <dayShift>
	                <tail>(tail + tanh(Tdelta/4000*1.098612289)) * exp(-decay)</tail>
                </dayShift>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
            <transactionScore name="AverageBalance">
            	<idea>"Higher balance - higher TS"</idea>
            	<algorithm>"30 day deep day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 15, 80% of max contribution corresponds to 10,000 COTI avg balance in
                    month or B0.8 = 10,000 or rxB0.8 = 400 for day-by day calculation"</valueAdjusting>
                <tail>"Total contribution of previous days older than a month"</tail>
                <deltaVector>TSbal[0:29] 30 values</deltaVector>
                <newaddress>Calculate deltaVector[0:29] for the new address starting from the current balance backward</newaddress>
                <newaddress>New address is unknown before address which is first time debited</newaddress>
                <newaddress>There can be several deltaVector within a day</newaddress>
                <nonlinearFunction>tanh(B/400*1.098612289)</nonlinearFunction>
                <decay>ln(2)/30</decay>
                <currentValue>tail + sum( exp(-decay*t) * tanh(deltaVector[t]/400*1.098612289) for t in 0:29 )</currentValue>
                <dayShift>
                	<tail>tail * exp(-decay) + tanh(deltaVector[29]/400*1.098612289)  * exp(-decay*30)</tail>
                	<deltaVector>deltaVector[i+1] = deltaVector[i]</deltaVector>
                	<deltaVector>deltaVector[0] = deltaVector[0] --- but it may be better to take actual sum of all accounts balances</deltaVector>
                </dayShift>
                <weight>0.75</weight>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
        </behaviorCumulativeScores>
        <behaviorEventsScore>
            <standardEventScore name="IncorrectTransaction">
                <idea>"It is to be defined, how to catch it"</idea>
                <algorithm>"Go through all events, apply weight and decay and summarize"</algorithm>
                <algorithm>"After a limitation term, move events from actual table to archive"</algorithm>
                <term>360</term>
                <weight>-2.0</weight>
                <decay>ln(2)/90</decay>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </standardEventScore>
            <standardEventScore name="DoubleSpending">
                <idea>"It is to be defined, how to catch it"</idea>
                <algorithm>"Go through all events, apply weight and decay and summarize"</algorithm>
                <algorithm>"After a limitation term, move events from actual table to archive"</algorithm>
                <term>360</term>
                <weight>-10.0</weight>
                <decay>ln(2)/90</decay>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </standardEventScore>
            <compensableEventScore name="DepositedBalance">
                <idea>"Deposited money should increase TS for the depositor"</idea>
                <valueAdjusting>"Maximum contribution is 15 80% of max contribution corresponds to 1,000 deposited COTI"</valueAdjusting>
                <algorithm>"Go through all "DepositedBalance" and "ClosedDeposits" events and summarize. D=sum(amounts)"</algorithm>
                <comment>"The algorithm will be changed to take into account how long deposits are kept and decay for old ones"</comment>
                <amount>The value of depositing transaction</amount>
                <nonlinearFunction>tanh(D*1.098612289/1000)</nonlinearFunction>
                <weight>15.0</weight>
                <decay>ln(2)/90</decay>
                <calculation>TSdeposits = tanh(D*1.098612289/1000)</calculation>
            </compensableEventScore>
            <compensatingEventScore name="ClosedDeposits">
                <idea>"It is event of returning a deposit in all or in part, all description is in the parent event DepositedBalance"</idea>
                <amount>Value of the repaying transaction</amount>
                <parent>link to a DepositedBalance event</parent>
            </compensatingEventScore>
            <compensableEventScore name="NonFulfillment">
                <idea>"Not fulfilling a jury decision to pay or settle in other way"</idea>
                <algorithm>"Go through all "NonFulfillment" and "LateFulfillment" events, apply weights and summarize related"</algorithm>
                <term>720</term>
                <amount>The value of the debt</amount>
                <weight1>-50.0</weight1>
                <weight2>-10.0</weight2>
                <decay>ln(2)/90</decay>
                <calculation>TSnfevent = weight1 + weight2*amount/10^6</calculation>
                <calculation>TSnf = TSnfevent + TSnfcompensation</calculation>
            </compensableEventScore>
            <compensatingEventScore name="LateFulfillment">
                <idea>"Fulfilling a jury decision after compensated TS in part"</idea>
                <calculation>TSnfcompensation = weight1 + weight2*sum(amount for the same parent)/10^6</calculation>
                <amount>The value of the repayment</amount>
                <weight1>49.0</weight1>
                <weight2>10.0</weight2>
                <parent>link to a DepositedBalance event</parent>
            </compensatingEventScore>
        </behaviorEventsScore>
        <behaviorHighFrequencyEventsScore>
        	<comment>"It is not always real high frequency, but the processing for these events is frequency-based"</comment>
            <highFrequencyEventsScore name="FillingTheQuestionnaire">
                <idea>"A person filling questionnaire too frequent is probably cheating"</idea>
                <term>No term, just high decay</term>
                <valueToStore>TSquestfreq</valueToStore>
                <algorithm>"Apply penalty if there are 3 events per current day, double if 6, triple if 9"</algorithm>
                <weight>-10.0</weight>
                <decay>ln(2)/3</decay>
                <dayShift>Standard day-by-day decay</dayShift>
            </highFrequencyEventsScore>
            <highFrequencyEventsScore name="Claim">
                <idea>"A person sending too much claims to the arbitration should be deprived"</idea>
                <term>No term, just decay</term>
                <valueToStore>TSclaims</valueToStore>
                <nonlinearFunction>tanh(C/30*1.098612289)</nonlinearFunction>
                <algorithm>"Count the number of claims for the last month, after apply nonlinear function, after add the stored value"</algorithm>
                <weight>-0.25</weight>
                <decay>ln(2)/30</decay>
                <dayShift>Standard day-by-day decay</dayShift>
            </highFrequencyEventsScore>
            <highFrequencyEventsScore name="ChargeBack">
                <idea>"Calculate chargeback rate dividing exponentially smoothed counters, apply the fine if it is larger than the standard(~2%)"</idea>
                <term>"No term, just decay"</term>
                <decay>ln(2)/30</decay>
                <standardChargebackRate>0.02</standardChargebackRate>
                <contribution>max((tail2+Nchargebackstoday)/(tail1+Ncreditstoday) - standardChargebackRate, 0)</contribution>
                <tail1>Ncredits+tail1*exp(-decay)</tail1>
                <tail2>Nchargebacks+tail2*exp(-decay)</tail2>
                <weight>-5</weight>
            </highFrequencyEventsScore>
        </behaviorHighFrequencyEventsScore>
    </user>
    <user type="node">
    	<userID>userHash</userID>
    	<addressMapping>address -> userHash (for nodes it can be excessive)</addressMapping>
        <initialTrustScore>
            <initialTrustScoreComponent name="OwnersTS">
                <definition>"Borrow the TS from the owner"</definition>
                <range>
                    <from>0</from>
                    <to>100</to>
                </range>
                <weight>0.4</weight>
                <decay>ln(2)/365</decay>
            </initialTrustScoreComponent>
        </initialTrustScore>
        <behaviorCumulativeScores>
            <transactionScore name="TransactionFrequency">
            	<idea>"More transactions - more TS"</idea>
            	<algorithm>"Day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 30 80% of max contribution corresponds to 1,000,000 Txs per month or N0.8
                    = 1,000,000" or rxN0.8 = 40,000 for day-by day"</valueAdjusting>
				<Ndelta>count(outcomingTxForAllAddressesForTheUser) within a day</Ndelta>
                <nonlinearFunction>tanh(N/40000*1.098612289)</nonlinearFunction>
                <weight>0.75</weight>
                <decay>ln(2)/30</decay>
                <currentValue>tail + tanh(Ndelta/40000*1.098612289)</currentValue>
                <tail>"Total contribution of previous days"</tail>
                <dayShift>
	                <tail>(tail + tanh(Ndelta/40000*1.098612289)) * exp(-decay)</tail>
                </dayShift>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
            <transactionScore name="Turnover">
            	<idea>"More turnover - more TS"</idea>
            	<algorithm>"Day-by-day calculation"</algorithm>
                <valueAdjusting>"Maximum contribution is 30 80% of max contribution corresponds to 100,000 COTI per month or
                    T0.8 = 10,000,000 or rxT0.8 = 400,000 for day-by day calculation"</valueAdjusting>
				<Tdelta>sum(outcomingTxForAllAddressesForTheUser) within a day</Tdelta>
                <nonlinearFunction>tanh(T/400000*1.098612289)</nonlinearFunction>
                <weight>0.75</weight>
                <decay>ln(2)/30</decay>
                <currentValue>tail + tanh(Tdelta/400000*1.098612289)</currentValue>
                <tail>"Total contribution of previous days"</tail>
                <dayShift>
	                <tail>(tail + tanh(Tdelta/400000*1.098612289)) * exp(-decay)</tail>
                </dayShift>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </transactionScore>
        </behaviorCumulativeScores>
        <behaviorEventsScore>
            <standardEventScore name="IncorrectTransaction">
                <idea>"It is to be defined, how to catch it"</idea>
                <algorithm>"Go through all events, apply weight and decay and summarize"</algorithm>
                <algorithm>"After a limitation term, move events from actual table to archive"</algorithm>
                <term>360</term>
                <weight>-2.0</weight>
                <decay>ln(2)/90</decay>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </standardEventScore>
            <standardEventScore name="DoubleSpending">
                <idea>"It is to be defined, how to catch it"</idea>
                <algorithm>"Go through all events, apply weight and decay and summarize"</algorithm>
                <algorithm>"After a limitation term, move events from actual table to archive"</algorithm>
                <term>360</term>
                <weight>-10.0</weight>
                <decay>ln(2)/90</decay>
                <issue>"When the day changes? It should be different for different locations?"</issue>
            </standardEventScore>
            <standardEventScore name="ConfiramationEvading">
            	<comment>TBD</comment>
            </standardEventScore>
            <standardEventScore name="SmartContractExecutionEvading">
            	<comment>TBD</comment>
            </standardEventScore>
        </behaviorEventsScore>
        <behaviorHighFrequencyEventsScore>
        </behaviorHighFrequencyEventsScore>
    </user>
</users>
